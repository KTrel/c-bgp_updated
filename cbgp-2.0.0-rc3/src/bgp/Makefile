# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/bgp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/cbgp
pkgincludedir = $(includedir)/cbgp
pkglibdir = $(libdir)/cbgp
pkglibexecdir = $(libexecdir)/cbgp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/bgp
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbgp_la_DEPENDENCIES = aslevel/libbgp_aslevel.la attr/libbgp_attr.la \
	filter/libbgp_filter.la
am_libbgp_la_OBJECTS = libbgp_la-as.lo libbgp_la-attr.lo \
	libbgp_la-auto-config.lo libbgp_la-bgp_assert.lo \
	libbgp_la-bgp_debug.lo libbgp_la-cisco.lo libbgp_la-dp_rt.lo \
	libbgp_la-dp_rules.lo libbgp_la-domain.lo libbgp_la-message.lo \
	libbgp_la-mrtd.lo libbgp_la-peer.lo libbgp_la-peer-list.lo \
	libbgp_la-qos.lo libbgp_la-record-route.lo libbgp_la-rib.lo \
	libbgp_la-route.lo libbgp_la-route_reflector.lo \
	libbgp_la-route_map.lo libbgp_la-routes_list.lo \
	libbgp_la-route-input.lo libbgp_la-tie_breaks.lo \
	libbgp_la-walton.lo
libbgp_la_OBJECTS = $(am_libbgp_la_OBJECTS)
libbgp_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libbgp_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libbgp_la_SOURCES)
DIST_SOURCES = $(libbgp_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run aclocal-1.11
AMTAR = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run autoconf
AUTOHEADER = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run autoheader
AUTOMAKE = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run automake-1.11
AWK = gawk
CBGP_LT_RELEASE = 2.0.0-rc3
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = 
JAVAC = 
JAVADOC = 
JAVAH = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBGDS_CFLAGS = -I/usr/local/include  
LIBGDS_LIBS = -L/usr/local/lib -lgds  
LIBGDS_VERSION = 2.0.0
LIBOBJS = 
LIBPCRE_CONFIG = pcre-config
LIBS = -lbz2 -lz 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /vagrant/cbgp-2.0.0-rc3/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cbgp
PACKAGE_BUGREPORT = bruno.quoitin@uclouvain.be
PACKAGE_NAME = cbgp
PACKAGE_STRING = cbgp 2.0.0-rc3
PACKAGE_TARNAME = cbgp
PACKAGE_URL = 
PACKAGE_VERSION = 2.0.0-rc3
PATH_SEPARATOR = :
PCRE_CFLAGS = -I/usr/local/include
PCRE_LIBS = -L/usr/local/lib -lpcre
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
READLINE_CFLAGS = 
READLINE_LIBS =  -lncurses  -lreadline
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.0.0-rc3
abs_builddir = /vagrant/cbgp-2.0.0-rc3/src/bgp
abs_srcdir = /vagrant/cbgp-2.0.0-rc3/src/bgp
abs_top_builddir = /vagrant/cbgp-2.0.0-rc3
abs_top_srcdir = /vagrant/cbgp-2.0.0-rc3
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /vagrant/cbgp-2.0.0-rc3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
uudecode = 
OPT_EXPERIMENTAL = 

# Compile experimental features ?
#OPT_EXPERIMENTAL = -D__EXPERIMENTAL__
OPT_EXTERNAL_BEST = 
#OPT_EXTERNAL_BEST = -D__EXPERIMENTAL_ADVERTISE_BEST_EXTERNAL_TO_INTERNAL__
OPT_WALTON = 
#OPT_WALTON = -D__EXPERIMENTAL_WALTON__
SUBDIRS = aslevel attr filter
DIST_SUBDIRS = aslevel attr filter
AM_CFLAGS = $(OPT_EXPERIMENTAL) $(OPT_EXTERNAL_BEST) $(OPT_WALTON)
noinst_LTLIBRARIES = libbgp.la
libbgp_la_CFLAGS = $(LIBGDS_CFLAGS)
libbgp_la_LIBADD = \
	aslevel/libbgp_aslevel.la \
	attr/libbgp_attr.la \
	filter/libbgp_filter.la

INCLUDES = -I..
libbgp_la_SOURCES = \
	as.c \
	as.h \
	attr.c \
	attr.h \
	auto-config.c \
	auto-config.h \
	bgp_assert.h \
	bgp_assert.c \
	bgp_debug.h \
	bgp_debug.c \
	cisco.c \
	cisco.h \
	dp_rt.c \
	dp_rt.h \
	dp_rules.c \
	dp_rules.h \
	domain.c \
	domain.h \
	message.c \
	message.h \
	mrtd.c \
	mrtd.h \
	nlri.h \
	peer.c \
	peer.h \
	peer-list.c \
	peer-list.h \
	qos.c \
	qos.h \
	record-route.c \
	record-route.h \
	rib.c \
	rib.h \
	route.c \
	route.h \
	route_reflector.c \
	route_reflector.h \
	route_map.c \
	route_map.h \
	routes_list.c \
	routes_list.h \
	route-input.c \
	route-input.h \
	tie_breaks.c \
	tie_breaks.h \
	types.h \
	walton.c \
	walton.h

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/bgp/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/bgp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbgp.la: $(libbgp_la_OBJECTS) $(libbgp_la_DEPENDENCIES) 
	$(libbgp_la_LINK)  $(libbgp_la_OBJECTS) $(libbgp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libbgp_la-as.Plo
include ./$(DEPDIR)/libbgp_la-attr.Plo
include ./$(DEPDIR)/libbgp_la-auto-config.Plo
include ./$(DEPDIR)/libbgp_la-bgp_assert.Plo
include ./$(DEPDIR)/libbgp_la-bgp_debug.Plo
include ./$(DEPDIR)/libbgp_la-cisco.Plo
include ./$(DEPDIR)/libbgp_la-domain.Plo
include ./$(DEPDIR)/libbgp_la-dp_rt.Plo
include ./$(DEPDIR)/libbgp_la-dp_rules.Plo
include ./$(DEPDIR)/libbgp_la-message.Plo
include ./$(DEPDIR)/libbgp_la-mrtd.Plo
include ./$(DEPDIR)/libbgp_la-peer-list.Plo
include ./$(DEPDIR)/libbgp_la-peer.Plo
include ./$(DEPDIR)/libbgp_la-qos.Plo
include ./$(DEPDIR)/libbgp_la-record-route.Plo
include ./$(DEPDIR)/libbgp_la-rib.Plo
include ./$(DEPDIR)/libbgp_la-route-input.Plo
include ./$(DEPDIR)/libbgp_la-route.Plo
include ./$(DEPDIR)/libbgp_la-route_map.Plo
include ./$(DEPDIR)/libbgp_la-route_reflector.Plo
include ./$(DEPDIR)/libbgp_la-routes_list.Plo
include ./$(DEPDIR)/libbgp_la-tie_breaks.Plo
include ./$(DEPDIR)/libbgp_la-walton.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libbgp_la-as.lo: as.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-as.lo -MD -MP -MF $(DEPDIR)/libbgp_la-as.Tpo -c -o libbgp_la-as.lo `test -f 'as.c' || echo '$(srcdir)/'`as.c
	$(am__mv) $(DEPDIR)/libbgp_la-as.Tpo $(DEPDIR)/libbgp_la-as.Plo
#	source='as.c' object='libbgp_la-as.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-as.lo `test -f 'as.c' || echo '$(srcdir)/'`as.c

libbgp_la-attr.lo: attr.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-attr.lo -MD -MP -MF $(DEPDIR)/libbgp_la-attr.Tpo -c -o libbgp_la-attr.lo `test -f 'attr.c' || echo '$(srcdir)/'`attr.c
	$(am__mv) $(DEPDIR)/libbgp_la-attr.Tpo $(DEPDIR)/libbgp_la-attr.Plo
#	source='attr.c' object='libbgp_la-attr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-attr.lo `test -f 'attr.c' || echo '$(srcdir)/'`attr.c

libbgp_la-auto-config.lo: auto-config.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-auto-config.lo -MD -MP -MF $(DEPDIR)/libbgp_la-auto-config.Tpo -c -o libbgp_la-auto-config.lo `test -f 'auto-config.c' || echo '$(srcdir)/'`auto-config.c
	$(am__mv) $(DEPDIR)/libbgp_la-auto-config.Tpo $(DEPDIR)/libbgp_la-auto-config.Plo
#	source='auto-config.c' object='libbgp_la-auto-config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-auto-config.lo `test -f 'auto-config.c' || echo '$(srcdir)/'`auto-config.c

libbgp_la-bgp_assert.lo: bgp_assert.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-bgp_assert.lo -MD -MP -MF $(DEPDIR)/libbgp_la-bgp_assert.Tpo -c -o libbgp_la-bgp_assert.lo `test -f 'bgp_assert.c' || echo '$(srcdir)/'`bgp_assert.c
	$(am__mv) $(DEPDIR)/libbgp_la-bgp_assert.Tpo $(DEPDIR)/libbgp_la-bgp_assert.Plo
#	source='bgp_assert.c' object='libbgp_la-bgp_assert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-bgp_assert.lo `test -f 'bgp_assert.c' || echo '$(srcdir)/'`bgp_assert.c

libbgp_la-bgp_debug.lo: bgp_debug.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-bgp_debug.lo -MD -MP -MF $(DEPDIR)/libbgp_la-bgp_debug.Tpo -c -o libbgp_la-bgp_debug.lo `test -f 'bgp_debug.c' || echo '$(srcdir)/'`bgp_debug.c
	$(am__mv) $(DEPDIR)/libbgp_la-bgp_debug.Tpo $(DEPDIR)/libbgp_la-bgp_debug.Plo
#	source='bgp_debug.c' object='libbgp_la-bgp_debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-bgp_debug.lo `test -f 'bgp_debug.c' || echo '$(srcdir)/'`bgp_debug.c

libbgp_la-cisco.lo: cisco.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-cisco.lo -MD -MP -MF $(DEPDIR)/libbgp_la-cisco.Tpo -c -o libbgp_la-cisco.lo `test -f 'cisco.c' || echo '$(srcdir)/'`cisco.c
	$(am__mv) $(DEPDIR)/libbgp_la-cisco.Tpo $(DEPDIR)/libbgp_la-cisco.Plo
#	source='cisco.c' object='libbgp_la-cisco.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-cisco.lo `test -f 'cisco.c' || echo '$(srcdir)/'`cisco.c

libbgp_la-dp_rt.lo: dp_rt.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-dp_rt.lo -MD -MP -MF $(DEPDIR)/libbgp_la-dp_rt.Tpo -c -o libbgp_la-dp_rt.lo `test -f 'dp_rt.c' || echo '$(srcdir)/'`dp_rt.c
	$(am__mv) $(DEPDIR)/libbgp_la-dp_rt.Tpo $(DEPDIR)/libbgp_la-dp_rt.Plo
#	source='dp_rt.c' object='libbgp_la-dp_rt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-dp_rt.lo `test -f 'dp_rt.c' || echo '$(srcdir)/'`dp_rt.c

libbgp_la-dp_rules.lo: dp_rules.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-dp_rules.lo -MD -MP -MF $(DEPDIR)/libbgp_la-dp_rules.Tpo -c -o libbgp_la-dp_rules.lo `test -f 'dp_rules.c' || echo '$(srcdir)/'`dp_rules.c
	$(am__mv) $(DEPDIR)/libbgp_la-dp_rules.Tpo $(DEPDIR)/libbgp_la-dp_rules.Plo
#	source='dp_rules.c' object='libbgp_la-dp_rules.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-dp_rules.lo `test -f 'dp_rules.c' || echo '$(srcdir)/'`dp_rules.c

libbgp_la-domain.lo: domain.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-domain.lo -MD -MP -MF $(DEPDIR)/libbgp_la-domain.Tpo -c -o libbgp_la-domain.lo `test -f 'domain.c' || echo '$(srcdir)/'`domain.c
	$(am__mv) $(DEPDIR)/libbgp_la-domain.Tpo $(DEPDIR)/libbgp_la-domain.Plo
#	source='domain.c' object='libbgp_la-domain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-domain.lo `test -f 'domain.c' || echo '$(srcdir)/'`domain.c

libbgp_la-message.lo: message.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-message.lo -MD -MP -MF $(DEPDIR)/libbgp_la-message.Tpo -c -o libbgp_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c
	$(am__mv) $(DEPDIR)/libbgp_la-message.Tpo $(DEPDIR)/libbgp_la-message.Plo
#	source='message.c' object='libbgp_la-message.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c

libbgp_la-mrtd.lo: mrtd.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-mrtd.lo -MD -MP -MF $(DEPDIR)/libbgp_la-mrtd.Tpo -c -o libbgp_la-mrtd.lo `test -f 'mrtd.c' || echo '$(srcdir)/'`mrtd.c
	$(am__mv) $(DEPDIR)/libbgp_la-mrtd.Tpo $(DEPDIR)/libbgp_la-mrtd.Plo
#	source='mrtd.c' object='libbgp_la-mrtd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-mrtd.lo `test -f 'mrtd.c' || echo '$(srcdir)/'`mrtd.c

libbgp_la-peer.lo: peer.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-peer.lo -MD -MP -MF $(DEPDIR)/libbgp_la-peer.Tpo -c -o libbgp_la-peer.lo `test -f 'peer.c' || echo '$(srcdir)/'`peer.c
	$(am__mv) $(DEPDIR)/libbgp_la-peer.Tpo $(DEPDIR)/libbgp_la-peer.Plo
#	source='peer.c' object='libbgp_la-peer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-peer.lo `test -f 'peer.c' || echo '$(srcdir)/'`peer.c

libbgp_la-peer-list.lo: peer-list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-peer-list.lo -MD -MP -MF $(DEPDIR)/libbgp_la-peer-list.Tpo -c -o libbgp_la-peer-list.lo `test -f 'peer-list.c' || echo '$(srcdir)/'`peer-list.c
	$(am__mv) $(DEPDIR)/libbgp_la-peer-list.Tpo $(DEPDIR)/libbgp_la-peer-list.Plo
#	source='peer-list.c' object='libbgp_la-peer-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-peer-list.lo `test -f 'peer-list.c' || echo '$(srcdir)/'`peer-list.c

libbgp_la-qos.lo: qos.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-qos.lo -MD -MP -MF $(DEPDIR)/libbgp_la-qos.Tpo -c -o libbgp_la-qos.lo `test -f 'qos.c' || echo '$(srcdir)/'`qos.c
	$(am__mv) $(DEPDIR)/libbgp_la-qos.Tpo $(DEPDIR)/libbgp_la-qos.Plo
#	source='qos.c' object='libbgp_la-qos.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-qos.lo `test -f 'qos.c' || echo '$(srcdir)/'`qos.c

libbgp_la-record-route.lo: record-route.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-record-route.lo -MD -MP -MF $(DEPDIR)/libbgp_la-record-route.Tpo -c -o libbgp_la-record-route.lo `test -f 'record-route.c' || echo '$(srcdir)/'`record-route.c
	$(am__mv) $(DEPDIR)/libbgp_la-record-route.Tpo $(DEPDIR)/libbgp_la-record-route.Plo
#	source='record-route.c' object='libbgp_la-record-route.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-record-route.lo `test -f 'record-route.c' || echo '$(srcdir)/'`record-route.c

libbgp_la-rib.lo: rib.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-rib.lo -MD -MP -MF $(DEPDIR)/libbgp_la-rib.Tpo -c -o libbgp_la-rib.lo `test -f 'rib.c' || echo '$(srcdir)/'`rib.c
	$(am__mv) $(DEPDIR)/libbgp_la-rib.Tpo $(DEPDIR)/libbgp_la-rib.Plo
#	source='rib.c' object='libbgp_la-rib.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-rib.lo `test -f 'rib.c' || echo '$(srcdir)/'`rib.c

libbgp_la-route.lo: route.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-route.lo -MD -MP -MF $(DEPDIR)/libbgp_la-route.Tpo -c -o libbgp_la-route.lo `test -f 'route.c' || echo '$(srcdir)/'`route.c
	$(am__mv) $(DEPDIR)/libbgp_la-route.Tpo $(DEPDIR)/libbgp_la-route.Plo
#	source='route.c' object='libbgp_la-route.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-route.lo `test -f 'route.c' || echo '$(srcdir)/'`route.c

libbgp_la-route_reflector.lo: route_reflector.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-route_reflector.lo -MD -MP -MF $(DEPDIR)/libbgp_la-route_reflector.Tpo -c -o libbgp_la-route_reflector.lo `test -f 'route_reflector.c' || echo '$(srcdir)/'`route_reflector.c
	$(am__mv) $(DEPDIR)/libbgp_la-route_reflector.Tpo $(DEPDIR)/libbgp_la-route_reflector.Plo
#	source='route_reflector.c' object='libbgp_la-route_reflector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-route_reflector.lo `test -f 'route_reflector.c' || echo '$(srcdir)/'`route_reflector.c

libbgp_la-route_map.lo: route_map.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-route_map.lo -MD -MP -MF $(DEPDIR)/libbgp_la-route_map.Tpo -c -o libbgp_la-route_map.lo `test -f 'route_map.c' || echo '$(srcdir)/'`route_map.c
	$(am__mv) $(DEPDIR)/libbgp_la-route_map.Tpo $(DEPDIR)/libbgp_la-route_map.Plo
#	source='route_map.c' object='libbgp_la-route_map.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-route_map.lo `test -f 'route_map.c' || echo '$(srcdir)/'`route_map.c

libbgp_la-routes_list.lo: routes_list.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-routes_list.lo -MD -MP -MF $(DEPDIR)/libbgp_la-routes_list.Tpo -c -o libbgp_la-routes_list.lo `test -f 'routes_list.c' || echo '$(srcdir)/'`routes_list.c
	$(am__mv) $(DEPDIR)/libbgp_la-routes_list.Tpo $(DEPDIR)/libbgp_la-routes_list.Plo
#	source='routes_list.c' object='libbgp_la-routes_list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-routes_list.lo `test -f 'routes_list.c' || echo '$(srcdir)/'`routes_list.c

libbgp_la-route-input.lo: route-input.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-route-input.lo -MD -MP -MF $(DEPDIR)/libbgp_la-route-input.Tpo -c -o libbgp_la-route-input.lo `test -f 'route-input.c' || echo '$(srcdir)/'`route-input.c
	$(am__mv) $(DEPDIR)/libbgp_la-route-input.Tpo $(DEPDIR)/libbgp_la-route-input.Plo
#	source='route-input.c' object='libbgp_la-route-input.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-route-input.lo `test -f 'route-input.c' || echo '$(srcdir)/'`route-input.c

libbgp_la-tie_breaks.lo: tie_breaks.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-tie_breaks.lo -MD -MP -MF $(DEPDIR)/libbgp_la-tie_breaks.Tpo -c -o libbgp_la-tie_breaks.lo `test -f 'tie_breaks.c' || echo '$(srcdir)/'`tie_breaks.c
	$(am__mv) $(DEPDIR)/libbgp_la-tie_breaks.Tpo $(DEPDIR)/libbgp_la-tie_breaks.Plo
#	source='tie_breaks.c' object='libbgp_la-tie_breaks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-tie_breaks.lo `test -f 'tie_breaks.c' || echo '$(srcdir)/'`tie_breaks.c

libbgp_la-walton.lo: walton.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -MT libbgp_la-walton.lo -MD -MP -MF $(DEPDIR)/libbgp_la-walton.Tpo -c -o libbgp_la-walton.lo `test -f 'walton.c' || echo '$(srcdir)/'`walton.c
	$(am__mv) $(DEPDIR)/libbgp_la-walton.Tpo $(DEPDIR)/libbgp_la-walton.Plo
#	source='walton.c' object='libbgp_la-walton.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbgp_la_CFLAGS) $(CFLAGS) -c -o libbgp_la-walton.lo `test -f 'walton.c' || echo '$(srcdir)/'`walton.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
